GtfFile("data/sample.gtf", fields=('seqid', 'start', 'end')).batches(batch_size=3): |-
    ->  oxbow._core.base.DataFile.fragments(batch_size=3)
        ->  oxbow._core.function.GxfFile._batch_readers
        <-  GxfFile._batch_readers.<generator>
        ->  oxbow._core.base.DataFile._scanner
            ->  oxbow._core.base.DataFile._source
            <-  'data/sample.gtf'
            ->  oxbow._core.function.GxfFile._scanner_kwargs
            <-  {'compressed': 'False'}
        <-  builtins.PyGtfScanner.<object>
        ->  oxbow._core.function.GxfFile._scan_kwargs
        <-  {'attribute_defs': [("'ccdsid'", "'String'"), ("'exon_id'", "'String'"), ("'exon_number'", "'String'"), ("'gene_id'", "'String'"), ("'gene_name'", "'String'"), ("'gene_type'", "'String'"), ("'havana_gene'", "'String'"), ("'havana_transcript'", "'String'"), ("'hgnc_id'", "'String'"), ("'level'", "'String'"), '<', '6', ' ', 'm', 'o', 'r', 'e', ' ', 'i', 't', 'e', 'm', 's', '>'], 'fields': ("'seqid'", "'start'", "'end'")}
        ->  oxbow._core.function.GxfFile._batch_readers.<generator>
            ->  oxbow._core.base.DataFile.schema
                ->  oxbow._core.base.DataFile._scanner
                    ->  oxbow._core.base.DataFile._source
                    <-  'data/sample.gtf'
                    ->  oxbow._core.function.GxfFile._scanner_kwargs
                    <-  {'compressed': 'False'}
                <-  builtins.PyGtfScanner.<object>
                ->  oxbow._core.function.GxfFile._schema_kwargs
                <-  {'fields': ("'seqid'", "'start'", "'end'")}
            <-  seqid: string
                start: int32
                end: int32
        <-  oxbow._core.function.GxfFile._batch_readers.<locals>.<lambda>
    <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
