FastqFile("data/sample.fastq", fields=('name', 'sequence')).fragments(batch_size=3): |-
    ->  oxbow._core.base.DataSource.fragments(batch_size=3)
        ->  oxbow._core.sequence.FastqFile._batch_readers
        <-  FastqFile._batch_readers.<generator>
        ->  oxbow._core.base.DataSource._scanner
            ->  oxbow._core.base.DataSource._source
            <-  data/sample.fastq
            ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
            <-  {'compressed': 'False'}
        <-  oxbow.core.PyFastqScanner.<object>
        ->  oxbow._core.base.DataSource._make_batch_reader(builtins.builtin_function_or_method.<object>)
        <-  oxbow._core.base.DataSource._make_batch_reader.<locals>._batch_reader
        ->  oxbow._core.sequence.FastqFile._batch_readers.<generator>
            ->  oxbow._core.base.DataSource.schema
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  data/sample.fastq
                    ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                    <-  {'compressed': 'False'}
                <-  oxbow.core.PyFastqScanner.<object>
                ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                <-  {'fields': ('name', 'sequence')}
            <-  name: string
                sequence: string
        <-  oxbow._core.base.DataSource._make_batch_reader.<locals>._batch_reader
    <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
