FastaFile("data/does-not-exist.fasta").select(): |-
    ->  oxbow._core.sequence.FastaFile.select()
        ->  oxbow._core.sequence.SequenceFile.select(regions=None)
            ->  oxbow._core.base.DataSource.select(gzi=None, index=None, regions=None)
                ->  oxbow._core.sequence.SequenceFile._scan_kwargs
                <-  {'fields': 'None'}
                ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                <-  {'compressed': 'False'}
                ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                <-  {'fields': 'None'}
                ->  oxbow._core.sequence.FastaFile.__init__("data/does-not-exist.fasta", None, fields=None, compressed=False, gzi=None, index=None, regions=None)
                    ->  oxbow._core.sequence.SequenceFile.__init__("data/does-not-exist.fasta", None, None, None, None, False)
                        ->  oxbow._core.base.DataSource.__init__("data/does-not-exist.fasta", None, None)
                        <-  None
                    <-  None
                <-  None
                ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
                    ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                        ->  oxbow._core.sequence.FastaFile._batch_readers
                        <-  FastaFile._batch_readers.<generator>
                        ->  oxbow._core.base.DataSource._scanner
                            ->  oxbow._core.base.DataSource._source
                            <-  'data/does-not-exist.fasta'
                            ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                            <-  {'compressed': 'False'}
                        !!  FileNotFoundError('No such file or directory (os error 2)')
                    !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
                !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
            !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
        !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
    !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
FastaFile("data/malformed.fasta").select(): |-
    ->  oxbow._core.sequence.FastaFile.select()
        ->  oxbow._core.sequence.SequenceFile.select(regions=None)
            ->  oxbow._core.base.DataSource.select(gzi=None, index=None, regions=None)
                ->  oxbow._core.sequence.SequenceFile._scan_kwargs
                <-  {'fields': 'None'}
                ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                <-  {'compressed': 'False'}
                ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                <-  {'fields': 'None'}
                ->  oxbow._core.sequence.FastaFile.__init__("data/malformed.fasta", None, fields=None, compressed=False, gzi=None, index=None, regions=None)
                    ->  oxbow._core.sequence.SequenceFile.__init__("data/malformed.fasta", None, None, None, None, False)
                        ->  oxbow._core.base.DataSource.__init__("data/malformed.fasta", None, None)
                        <-  None
                    <-  None
                <-  None
                ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
                    ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                        ->  oxbow._core.sequence.FastaFile._batch_readers
                        <-  FastaFile._batch_readers.<generator>
                        ->  oxbow._core.base.DataSource._scanner
                            ->  oxbow._core.base.DataSource._source
                            <-  'data/malformed.fasta'
                            ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                            <-  {'compressed': 'False'}
                        <-  oxbow.core.PyFastaScanner.<object>
                        ->  oxbow._core.sequence.FastaFile._batch_readers.<generator>
                            ->  oxbow._core.base.DataSource.schema
                                ->  oxbow._core.base.DataSource._scanner
                                    ->  oxbow._core.base.DataSource._source
                                    <-  'data/malformed.fasta'
                                    ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                                    <-  {'compressed': 'False'}
                                <-  oxbow.core.PyFastaScanner.<object>
                                ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                                <-  {'fields': 'None'}
                            <-  name: string
                                description: string
                                sequence: string
                        <-  oxbow._core.sequence.FastaFile._batch_readers.<locals>.<lambda>
                    <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
                <-  oxbow._pyarrow.BatchReaderDataset.<object>
            <-  oxbow._pyarrow.BatchReaderDataset.<object>
        <-  oxbow._pyarrow.BatchReaderDataset.<object>
    <-  oxbow._pyarrow.BatchReaderDataset.<object>
FastaFile("data/sample.fasta").select(): |-
    ->  oxbow._core.sequence.FastaFile.select()
        ->  oxbow._core.sequence.SequenceFile.select(regions=None)
            ->  oxbow._core.base.DataSource.select(gzi=None, index=None, regions=None)
                ->  oxbow._core.sequence.SequenceFile._scan_kwargs
                <-  {'fields': 'None'}
                ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                <-  {'compressed': 'False'}
                ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                <-  {'fields': 'None'}
                ->  oxbow._core.sequence.FastaFile.__init__("data/sample.fasta", None, fields=None, compressed=False, gzi=None, index=None, regions=None)
                    ->  oxbow._core.sequence.SequenceFile.__init__("data/sample.fasta", None, None, None, None, False)
                        ->  oxbow._core.base.DataSource.__init__("data/sample.fasta", None, None)
                        <-  None
                    <-  None
                <-  None
                ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
                    ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                        ->  oxbow._core.sequence.FastaFile._batch_readers
                        <-  FastaFile._batch_readers.<generator>
                        ->  oxbow._core.base.DataSource._scanner
                            ->  oxbow._core.base.DataSource._source
                            <-  'data/sample.fasta'
                            ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                            <-  {'compressed': 'False'}
                        <-  oxbow.core.PyFastaScanner.<object>
                        ->  oxbow._core.sequence.FastaFile._batch_readers.<generator>
                            ->  oxbow._core.base.DataSource.schema
                                ->  oxbow._core.base.DataSource._scanner
                                    ->  oxbow._core.base.DataSource._source
                                    <-  'data/sample.fasta'
                                    ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                                    <-  {'compressed': 'False'}
                                <-  oxbow.core.PyFastaScanner.<object>
                                ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                                <-  {'fields': 'None'}
                            <-  name: string
                                description: string
                                sequence: string
                        <-  oxbow._core.sequence.FastaFile._batch_readers.<locals>.<lambda>
                    <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
                <-  oxbow._pyarrow.BatchReaderDataset.<object>
            <-  oxbow._pyarrow.BatchReaderDataset.<object>
        <-  oxbow._pyarrow.BatchReaderDataset.<object>
    <-  oxbow._pyarrow.BatchReaderDataset.<object>
