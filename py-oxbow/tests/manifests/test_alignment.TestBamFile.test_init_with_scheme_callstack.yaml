BamFile("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/does-not-exist.bam", compressed=True): |-
    ->  oxbow._core.alignment.AlignmentFile.__init__("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/does-not-exist.bam", compressed=True)
        ->  oxbow._core.base.DataSource.__init__("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/does-not-exist.bam", None, 131072)
        <-  None
        ->  oxbow._core.base.DataSource.scanner()
            ->  oxbow._core.base.DataSource._source
            !!  FileNotFoundError(2, 'No such file or directory')
        !!  FileNotFoundError(2, "No such file or directory")
    !!  FileNotFoundError(2, "No such file or directory")
BamFile("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/malformed.bam", compressed=True): |-
    ->  oxbow._core.alignment.AlignmentFile.__init__("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/malformed.bam", compressed=True)
        ->  oxbow._core.base.DataSource.__init__("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/malformed.bam", None, 131072)
        <-  None
        ->  oxbow._core.base.DataSource.scanner()
            ->  oxbow._core.base.DataSource._source
            <-  fsspec.implementations.local.LocalFileOpener.<object>
        !!  PanicException("called `Result::unwrap()` on an `Err` value: Error { kind: UnexpectedEof, message: 'failed to fill whole buffer' }")
    !!  PanicException("called `Result::unwrap()` on an `Err` value: Error { kind: UnexpectedEof, message: 'failed to fill whole buffer' }")
BamFile("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/sample.bam", compressed=True): |-
    ->  oxbow._core.alignment.AlignmentFile.__init__("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/sample.bam", compressed=True)
        ->  oxbow._core.base.DataSource.__init__("file:///Users/conrad/Projects/abdenlab/oxbow/py-oxbow/tests/data/sample.bam", None, 131072)
        <-  None
        ->  oxbow._core.base.DataSource.scanner()
            ->  oxbow._core.base.DataSource._source
            <-  fsspec.implementations.local.LocalFileOpener.<object>
        <-  oxbow.core.PyBamScanner.<object>
    <-  None
