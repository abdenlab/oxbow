BcfFile("data/does-not-exist.bcf").select(): |-
    ->  oxbow._core.variant.BcfFile.__init__("data/does-not-exist.bcf", samples=("HG00096", "HG00101", "HG00103"), genotype_fields=("GT",), info_fields=("DP",))
        ->  oxbow._core.variant.VariantFile.__init__(uri="data/does-not-exist.bcf", opener=None, fields=None, index=None, compressed=True, regions=None, info_fields=("DP",), genotype_fields=("GT",), samples=("HG00096", "HG00101", "HG00103"), genotype_by="sample")
            ->  oxbow._core.base.DataSource.__init__("data/does-not-exist.bcf", None, None)
            <-  None
            ->  oxbow._core.base.DataSource._scanner
                ->  oxbow._core.base.DataSource._source
                <-  'data/does-not-exist.bcf'
                ->  oxbow._core.variant.BcfFile._scanner_kwargs
                <-  {}
            !!  FileNotFoundError('No such file or directory (os error 2)')
        !!  FileNotFoundError("No such file or directory (os error 2)")
    !!  FileNotFoundError("No such file or directory (os error 2)")
BcfFile("data/malformed.bcf").select(): |-
    ->  oxbow._core.variant.BcfFile.__init__("data/malformed.bcf", samples=("HG00096", "HG00101", "HG00103"), genotype_fields=("GT",), info_fields=("DP",))
        ->  oxbow._core.variant.VariantFile.__init__(uri="data/malformed.bcf", opener=None, fields=None, index=None, compressed=True, regions=None, info_fields=("DP",), genotype_fields=("GT",), samples=("HG00096", "HG00101", "HG00103"), genotype_by="sample")
            ->  oxbow._core.base.DataSource.__init__("data/malformed.bcf", None, None)
            <-  None
            ->  oxbow._core.base.DataSource._scanner
                ->  oxbow._core.base.DataSource._source
                <-  'data/malformed.bcf'
                ->  oxbow._core.variant.BcfFile._scanner_kwargs
                <-  {}
            !!  OSError('invalid BGZF header')
        !!  OSError("invalid BGZF header")
    !!  OSError("invalid BGZF header")
BcfFile("data/sample.bcf").select(): |-
    ->  oxbow._core.variant.BcfFile.__init__("data/sample.bcf", samples=("HG00096", "HG00101", "HG00103"), genotype_fields=("GT",), info_fields=("DP",))
        ->  oxbow._core.variant.VariantFile.__init__(uri="data/sample.bcf", opener=None, fields=None, index=None, compressed=True, regions=None, info_fields=("DP",), genotype_fields=("GT",), samples=("HG00096", "HG00101", "HG00103"), genotype_by="sample")
            ->  oxbow._core.base.DataSource.__init__("data/sample.bcf", None, None)
            <-  None
            ->  oxbow._core.base.DataSource._scanner
                ->  oxbow._core.base.DataSource._source
                <-  'data/sample.bcf'
                ->  oxbow._core.variant.BcfFile._scanner_kwargs
                <-  {}
            <-  oxbow.core.PyBcfScanner.<object>
            ->  oxbow._core.base.DataSource._scanner
                ->  oxbow._core.base.DataSource._source
                <-  'data/sample.bcf'
                ->  oxbow._core.variant.BcfFile._scanner_kwargs
                <-  {}
            <-  oxbow.core.PyBcfScanner.<object>
            ->  oxbow._core.base.DataSource._scanner
                ->  oxbow._core.base.DataSource._source
                <-  'data/sample.bcf'
                ->  oxbow._core.variant.BcfFile._scanner_kwargs
                <-  {}
            <-  oxbow.core.PyBcfScanner.<object>
        <-  None
    <-  None
    ->  oxbow._core.base.DataSource.select()
        ->  oxbow._core.variant.VariantFile._scan_kwargs
        <-  {'fields': 'None', 'genotype_by': "'sample'", 'genotype_fields': ["'GT'"], 'info_fields': ["'DP'"], 'samples': ["'HG00096'", "'HG00101'", "'HG00103'"]}
        ->  oxbow._core.variant.BcfFile._scanner_kwargs
        <-  {}
        ->  oxbow._core.variant.VariantFile._schema_kwargs
        <-  {'fields': 'None', 'genotype_by': "'sample'", 'genotype_fields': ["'GT'"], 'info_fields': ["'DP'"], 'samples': ["'HG00096'", "'HG00101'", "'HG00103'"]}
        ->  oxbow._core.variant.BcfFile.__init__("data/sample.bcf", None, fields=None, genotype_by="sample", genotype_fields=["GT"], info_fields=["DP"], samples=["HG00096", "HG00101", "HG00103"])
            ->  oxbow._core.variant.VariantFile.__init__(uri="data/sample.bcf", opener=None, fields=None, index=None, compressed=True, regions=None, info_fields=["DP"], genotype_fields=["GT"], samples=["HG00096", "HG00101", "HG00103"], genotype_by="sample")
                ->  oxbow._core.base.DataSource.__init__("data/sample.bcf", None, None)
                <-  None
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  'data/sample.bcf'
                    ->  oxbow._core.variant.BcfFile._scanner_kwargs
                    <-  {}
                <-  oxbow.core.PyBcfScanner.<object>
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  'data/sample.bcf'
                    ->  oxbow._core.variant.BcfFile._scanner_kwargs
                    <-  {}
                <-  oxbow.core.PyBcfScanner.<object>
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  'data/sample.bcf'
                    ->  oxbow._core.variant.BcfFile._scanner_kwargs
                    <-  {}
                <-  oxbow.core.PyBcfScanner.<object>
            <-  None
        <-  None
        ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
            ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                ->  oxbow._core.variant.VariantFile._batch_readers
                <-  VariantFile._batch_readers.<generator>
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  'data/sample.bcf'
                    ->  oxbow._core.variant.BcfFile._scanner_kwargs
                    <-  {}
                <-  oxbow.core.PyBcfScanner.<object>
                ->  oxbow._core.variant.VariantFile._scan_kwargs
                <-  {'fields': 'None', 'genotype_by': "'sample'", 'genotype_fields': ["'GT'"], 'info_fields': ["'DP'"], 'samples': ["'HG00096'", "'HG00101'", "'HG00103'"]}
                ->  oxbow._core.variant.VariantFile._batch_readers.<generator>
                    ->  oxbow._core.base.DataSource.schema
                        ->  oxbow._core.base.DataSource._scanner
                            ->  oxbow._core.base.DataSource._source
                            <-  'data/sample.bcf'
                            ->  oxbow._core.variant.BcfFile._scanner_kwargs
                            <-  {}
                        <-  oxbow.core.PyBcfScanner.<object>
                        ->  oxbow._core.variant.VariantFile._schema_kwargs
                        <-  {'fields': 'None', 'genotype_by': "'sample'", 'genotype_fields': ["'GT'"], 'info_fields': ["'DP'"], 'samples': ["'HG00096'", "'HG00101'", "'HG00103'"]}
                    <-  chrom: dictionary<values=string, indices=int32, ordered=0>
                        pos: int32
                        id: list<item: string>
                          child 0, item: string
                        ref: string
                        alt: list<item: string>
                          child 0, item: string
                        qual: float
                        filter: list<item: string>
                          child 0, item: string
                        info: struct<DP: int32>
                          child 0, DP: int32
                        HG00096: struct<GT: struct<allele: list<item: int32>, phased: list<item: bool>>>
                          child 0, GT: struct<allele: list<item: int32>, phased: list<item: bool>>
                              child 0, allele: list<item: int32>
                                  child 0, item: int32
                              child 1, phased: list<item: bool>
                                  child 0, item: bool
                        HG00101: struct<GT: struct<allele: list<item: int32>, phased: list<item: bool>>>
                          child 0, GT: struct<allele: list<item: int32>, phased: list<item: bool>>
                              child 0, allele: list<item: int32>
                                  child 0, item: int32
                              child 1, phased: list<item: bool>
                                  child 0, item: bool
                        HG00103: struct<GT: struct<allele: list<item: int32>, phased: list<item: bool>>>
                          child 0, GT: struct<allele: list<item: int32>, phased: list<item: bool>>
                              child 0, allele: list<item: int32>
                                  child 0, item: int32
                              child 1, phased: list<item: bool>
                                  child 0, item: bool
                <-  oxbow._core.variant.VariantFile._batch_readers.<locals>.<lambda>
            <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
        <-  oxbow._pyarrow.BatchReaderDataset.<object>
    <-  oxbow._pyarrow.BatchReaderDataset.<object>
