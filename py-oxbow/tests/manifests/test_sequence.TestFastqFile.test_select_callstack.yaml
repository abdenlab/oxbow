FastqFile("data/does-not-exist.fastq").select(): |-
    ->  oxbow._core.sequence.SequenceFile.select()
        ->  oxbow._core.base.DataSource.select(gzi=None, index=None)
            ->  oxbow._core.sequence.SequenceFile._scan_kwargs
            <-  {'fields': 'None'}
            ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
            <-  {'compressed': 'False'}
            ->  oxbow._core.sequence.SequenceFile._schema_kwargs
            <-  {'fields': 'None'}
            ->  oxbow._core.sequence.SequenceFile.__init__("data/does-not-exist.fastq", None, fields=None, compressed=False, gzi=None, index=None)
                ->  oxbow._core.base.DataSource.__init__("data/does-not-exist.fastq", None, None)
                <-  None
            <-  None
            ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
                ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                    ->  oxbow._core.sequence.FastqFile._batch_readers
                    <-  FastqFile._batch_readers.<generator>
                    ->  oxbow._core.base.DataSource._scanner
                        ->  oxbow._core.base.DataSource._source
                        <-  'data/does-not-exist.fastq'
                        ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                        <-  {'compressed': 'False'}
                    !!  FileNotFoundError('No such file or directory (os error 2)')
                !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
            !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
        !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
    !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
FastqFile("data/malformed.fastq").select(): |-
    ->  oxbow._core.sequence.SequenceFile.select()
        ->  oxbow._core.base.DataSource.select(gzi=None, index=None)
            ->  oxbow._core.sequence.SequenceFile._scan_kwargs
            <-  {'fields': 'None'}
            ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
            <-  {'compressed': 'False'}
            ->  oxbow._core.sequence.SequenceFile._schema_kwargs
            <-  {'fields': 'None'}
            ->  oxbow._core.sequence.SequenceFile.__init__("data/malformed.fastq", None, fields=None, compressed=False, gzi=None, index=None)
                ->  oxbow._core.base.DataSource.__init__("data/malformed.fastq", None, None)
                <-  None
            <-  None
            ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
                ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                    ->  oxbow._core.sequence.FastqFile._batch_readers
                    <-  FastqFile._batch_readers.<generator>
                    ->  oxbow._core.base.DataSource._scanner
                        ->  oxbow._core.base.DataSource._source
                        <-  'data/malformed.fastq'
                        ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                        <-  {'compressed': 'False'}
                    <-  oxbow.core.PyFastqScanner.<object>
                    ->  oxbow._core.sequence.FastqFile._batch_readers.<generator>
                        ->  oxbow._core.base.DataSource.schema
                            ->  oxbow._core.base.DataSource._scanner
                                ->  oxbow._core.base.DataSource._source
                                <-  'data/malformed.fastq'
                                ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                                <-  {'compressed': 'False'}
                            <-  oxbow.core.PyFastqScanner.<object>
                            ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                            <-  {'fields': 'None'}
                        <-  name: string
                            description: string
                            sequence: string
                            quality: string
                    <-  oxbow._core.sequence.FastqFile._batch_readers.<locals>.<lambda>
                <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
            <-  oxbow._pyarrow.BatchReaderDataset.<object>
        <-  oxbow._pyarrow.BatchReaderDataset.<object>
    <-  oxbow._pyarrow.BatchReaderDataset.<object>
FastqFile("data/sample.fastq").select(): |-
    ->  oxbow._core.sequence.SequenceFile.select()
        ->  oxbow._core.base.DataSource.select(gzi=None, index=None)
            ->  oxbow._core.sequence.SequenceFile._scan_kwargs
            <-  {'fields': 'None'}
            ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
            <-  {'compressed': 'False'}
            ->  oxbow._core.sequence.SequenceFile._schema_kwargs
            <-  {'fields': 'None'}
            ->  oxbow._core.sequence.SequenceFile.__init__("data/sample.fastq", None, fields=None, compressed=False, gzi=None, index=None)
                ->  oxbow._core.base.DataSource.__init__("data/sample.fastq", None, None)
                <-  None
            <-  None
            ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
                ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                    ->  oxbow._core.sequence.FastqFile._batch_readers
                    <-  FastqFile._batch_readers.<generator>
                    ->  oxbow._core.base.DataSource._scanner
                        ->  oxbow._core.base.DataSource._source
                        <-  'data/sample.fastq'
                        ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                        <-  {'compressed': 'False'}
                    <-  oxbow.core.PyFastqScanner.<object>
                    ->  oxbow._core.sequence.FastqFile._batch_readers.<generator>
                        ->  oxbow._core.base.DataSource.schema
                            ->  oxbow._core.base.DataSource._scanner
                                ->  oxbow._core.base.DataSource._source
                                <-  'data/sample.fastq'
                                ->  oxbow._core.sequence.SequenceFile._scanner_kwargs
                                <-  {'compressed': 'False'}
                            <-  oxbow.core.PyFastqScanner.<object>
                            ->  oxbow._core.sequence.SequenceFile._schema_kwargs
                            <-  {'fields': 'None'}
                        <-  name: string
                            description: string
                            sequence: string
                            quality: string
                    <-  oxbow._core.sequence.FastqFile._batch_readers.<locals>.<lambda>
                <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
            <-  oxbow._pyarrow.BatchReaderDataset.<object>
        <-  oxbow._pyarrow.BatchReaderDataset.<object>
    <-  oxbow._pyarrow.BatchReaderDataset.<object>
