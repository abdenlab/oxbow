BedFile("data/does-not-exist.bed").select(): |-
    ->  oxbow._core.base.DataSource.select()
        ->  oxbow._core.feature.BedFile._scan_kwargs
        <-  {'fields': 'None'}
        ->  oxbow._core.feature.BedFile._scanner_kwargs
        <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
        ->  oxbow._core.feature.BedFile._schema_kwargs
        <-  {'fields': 'None'}
        ->  oxbow._core.feature.BedFile.__init__("data/does-not-exist.bed", None, fields=None, bed_schema="bed3", compressed=False)
            ->  oxbow._core.base.DataSource.__init__("data/does-not-exist.bed", None, None)
            <-  None
        <-  None
        ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
            ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                ->  oxbow._core.feature.BedFile._batch_readers
                <-  BedFile._batch_readers.<generator>
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  'data/does-not-exist.bed'
                    ->  oxbow._core.feature.BedFile._scanner_kwargs
                    <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
                !!  FileNotFoundError('No such file or directory (os error 2)')
            !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
        !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
    !!  UnboundLocalError('cannot access local variable "previous" where it is not associated with a value')
BedFile("data/malformed.bed").select(): |-
    ->  oxbow._core.base.DataSource.select()
        ->  oxbow._core.feature.BedFile._scan_kwargs
        <-  {'fields': 'None'}
        ->  oxbow._core.feature.BedFile._scanner_kwargs
        <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
        ->  oxbow._core.feature.BedFile._schema_kwargs
        <-  {'fields': 'None'}
        ->  oxbow._core.feature.BedFile.__init__("data/malformed.bed", None, fields=None, bed_schema="bed3", compressed=False)
            ->  oxbow._core.base.DataSource.__init__("data/malformed.bed", None, None)
            <-  None
        <-  None
        ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
            ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                ->  oxbow._core.feature.BedFile._batch_readers
                <-  BedFile._batch_readers.<generator>
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  'data/malformed.bed'
                    ->  oxbow._core.feature.BedFile._scanner_kwargs
                    <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
                <-  builtins.PyBedScanner.<object>
                ->  oxbow._core.feature.BedFile._batch_readers.<generator>
                    ->  oxbow._core.base.DataSource.schema
                        ->  oxbow._core.base.DataSource._scanner
                            ->  oxbow._core.base.DataSource._source
                            <-  'data/malformed.bed'
                            ->  oxbow._core.feature.BedFile._scanner_kwargs
                            <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
                        <-  builtins.PyBedScanner.<object>
                        ->  oxbow._core.feature.BedFile._schema_kwargs
                        <-  {'fields': 'None'}
                    <-  chrom: string
                        start: int64
                        end: int64
                <-  oxbow._core.feature.BedFile._batch_readers.<locals>.<lambda>
            <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
        <-  oxbow._pyarrow.BatchReaderDataset.<object>
    <-  oxbow._pyarrow.BatchReaderDataset.<object>
BedFile("data/sample.bed").select(): |-
    ->  oxbow._core.base.DataSource.select()
        ->  oxbow._core.feature.BedFile._scan_kwargs
        <-  {'fields': 'None'}
        ->  oxbow._core.feature.BedFile._scanner_kwargs
        <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
        ->  oxbow._core.feature.BedFile._schema_kwargs
        <-  {'fields': 'None'}
        ->  oxbow._core.feature.BedFile.__init__("data/sample.bed", None, fields=None, bed_schema="bed3", compressed=False)
            ->  oxbow._core.base.DataSource.__init__("data/sample.bed", None, None)
            <-  None
        <-  None
        ->  oxbow._core.base.DataSource.dataset(batch_size=131072)
            ->  oxbow._core.base.DataSource.fragments(batch_size=131072)
                ->  oxbow._core.feature.BedFile._batch_readers
                <-  BedFile._batch_readers.<generator>
                ->  oxbow._core.base.DataSource._scanner
                    ->  oxbow._core.base.DataSource._source
                    <-  'data/sample.bed'
                    ->  oxbow._core.feature.BedFile._scanner_kwargs
                    <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
                <-  builtins.PyBedScanner.<object>
                ->  oxbow._core.feature.BedFile._batch_readers.<generator>
                    ->  oxbow._core.base.DataSource.schema
                        ->  oxbow._core.base.DataSource._scanner
                            ->  oxbow._core.base.DataSource._source
                            <-  'data/sample.bed'
                            ->  oxbow._core.feature.BedFile._scanner_kwargs
                            <-  {'bed_schema': "'bed3'", 'compressed': 'False'}
                        <-  builtins.PyBedScanner.<object>
                        ->  oxbow._core.feature.BedFile._schema_kwargs
                        <-  {'fields': 'None'}
                    <-  chrom: string
                        start: int64
                        end: int64
                <-  oxbow._core.feature.BedFile._batch_readers.<locals>.<lambda>
            <-  ['oxbow._pyarrow.BatchReaderFragment.<object>']
        <-  oxbow._pyarrow.BatchReaderDataset.<object>
    <-  oxbow._pyarrow.BatchReaderDataset.<object>
